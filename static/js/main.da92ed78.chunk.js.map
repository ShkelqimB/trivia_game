{"version":3,"sources":["components/CustomizeButton.js","components/PlayScreen.jsx","components/WrongAnswerScreen.jsx","components/NextQuestionScreen.jsx","sounds/ui_tap-variant-01.wav","sounds/ui_unlock.wav","view/TriviaGame.jsx","App.js","reportWebVitals.js","index.js"],"names":["CustomizeButton","withStyles","root","borderRadius","width","height","margin","fontWeight","color","boxShadow","backgroundColor","Button","PlayScreen","classes","questions","currentQuestion","setFormat","setCurrentQuestion","setQuestions","Box","textAlign","Grid","item","xs","Typography","variant","className","TittleAndSubtitle","ReactHtmlParser","question","incorrect_answers","map","res","index","onClick","correct_answer","buttonStyle","style","length","WrongAnswerScreen","useState","showIcon","setShowIcon","useEffect","setTimeout","marginTop","Icon","fontSize","NextQuestionScreen","theme","createMuiTheme","Alert","props","elevation","typography","h1","breakpoints","up","h4","useStyles","makeStyles","TriviaGame","changeModeAudio","Audio","changeMode","playAudio","play","format","loading","setLoading","mode","setMode","error","setError","changeModeHandler","type","playSound","audioFile","getQuestion","a","axios","get","data","results","message","ThemeProvider","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","marginBottom","startIcon","endIcon","CircularProgress","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da92ed78.chunk.js","sourcesContent":["import { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst CustomizeButton = withStyles(() => ({\r\n    root: {\r\n      borderRadius: 25,width:350,height:55,margin:10,fontWeight:900,color:\"white\", boxShadow: \"none\",backgroundColor: \"rgba(0, 0, 0, 0.12)\",\r\n      '&:hover': {\r\n        boxShadow: \"none\",backgroundColor: \"rgba(0, 0, 0, 0.12)\",\r\n      },\r\n    },\r\n  }))(Button);\r\nexport default CustomizeButton;\r\n","import React from 'react'\r\n// NPM packages\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n// Components\r\nimport CustomizeButton from \"./CustomizeButton\"\r\n\r\n// Material UI\r\nimport { Box, Button, Grid, Typography } from '@material-ui/core'\r\n\r\nconst PlayScreen = ({classes,questions,currentQuestion,setFormat, setCurrentQuestion,setQuestions}) => {\r\n\r\n  const backToMainScreen = () => {\r\n    setCurrentQuestion(0); setQuestions(); setFormat(0);\r\n  }\r\n\r\n    return (\r\n        <Box textAlign=\"center\" width={\"100%\"}>\r\n        <Grid item xs={12}><Typography variant=\"h4\" className={classes.TittleAndSubtitle}>{questions[currentQuestion] ? ReactHtmlParser(questions[currentQuestion].question) : null }</Typography></Grid>\r\n       {questions[currentQuestion]?.incorrect_answers?.map((res,index)=> (\r\n         <Grid item xs={12} key={index}><CustomizeButton color=\"primary\" variant=\"contained\" onClick={() => setFormat(2)}>{res}</CustomizeButton></Grid>\r\n       ))}\r\n        {currentQuestion <= 4 && \r\n        <Grid item xs={12}><CustomizeButton color=\"primary\" variant=\"contained\" onClick={() => setFormat(3)}>{questions[currentQuestion] ? questions[currentQuestion].correct_answer : null}</CustomizeButton></Grid>\r\n        }\r\n        {currentQuestion === 5 && <>\r\n          <Grid item xs={12}><Typography variant=\"h1\" className={classes.TittleAndSubtitle}>Your score is: {currentQuestion}/{currentQuestion} </Typography></Grid>\r\n          <Grid item xs={12}><Button color=\"secondary\" variant=\"contained\" className={classes.buttonStyle} onClick={() => backToMainScreen()}>Try Again</Button></Grid>\r\n        </>\r\n        }\r\n        <Typography variant=\"caption\" style={{color:\"white\",fontWeight:900}}>{currentQuestion + \"/\" + questions.length}</Typography> \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PlayScreen\r\n","import React, { useState,useEffect } from 'react'\r\nimport { Box, Button, Grid, Icon, Typography } from '@material-ui/core'\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\n\r\nconst WrongAnswerScreen = ({classes,currentQuestion,setCurrentQuestion, setFormat,setQuestions}) => {\r\n  const [showIcon,setShowIcon] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {setShowIcon(false)}, 1000);    \r\n  },[])\r\n\r\n    const backToMainScreen = () => {\r\n        setCurrentQuestion(0); setQuestions(); setFormat(0);\r\n      }\r\n    return (\r\n        <Box textAlign=\"center\" width={\"100%\"} marginTop=\"20%\">\r\n          {showIcon ? \r\n          <Icon><ThumbDownIcon style={{width:200, height:400,color:\"white\"}}></ThumbDownIcon></Icon> \r\n          :<>\r\n          <Grid item xs={12}><Typography variant=\"h1\" className={classes.TittleAndSubtitle} style={{fontSize:200}}>{currentQuestion}</Typography></Grid>\r\n          <Grid item xs={12}><Button color=\"secondary\" variant=\"contained\" className={classes.buttonStyle} onClick={() => backToMainScreen()}>Try Again</Button></Grid>\r\n          </>}\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default WrongAnswerScreen\r\n","import React from 'react'\r\n// Materail UI\r\nimport { Box, Button, Grid, Icon } from '@material-ui/core';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n\r\nconst NextQuestionScreen = ({classes,setCurrentQuestion,currentQuestion,setFormat}) => {\r\n    return (\r\n        <Box textAlign=\"center\" width={\"100%\"}>\r\n     <Icon><ThumbUpIcon style={{width:200, height:400,color:\"white\"}}></ThumbUpIcon></Icon>\r\n      <Grid item xs={12}><Button color=\"secondary\" variant=\"contained\" className={classes.buttonStyle} onClick={() => {setCurrentQuestion(++currentQuestion);setFormat(1)}}>Next</Button></Grid>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default NextQuestionScreen\r\n","export default __webpack_public_path__ + \"static/media/ui_tap-variant-01.204f5440.wav\";","export default __webpack_public_path__ + \"static/media/ui_unlock.7011b899.wav\";","import React,{useState} from \"react\";\r\n\r\n// Materail UI\r\nimport { Box, Button, CircularProgress, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n// Axios\r\nimport axios from \"axios\";\r\n\r\n// Components\r\nimport CustomizeButton from \"../components/CustomizeButton\"\r\nimport PlayScreen from \"../components/PlayScreen\";\r\nimport WrongAnswerScreen from \"../components/WrongAnswerScreen\";\r\nimport NextQuestionScreen from \"../components/NextQuestionScreen\";\r\n\r\n// Sounds\r\nimport changeMode from \"../sounds/ui_tap-variant-01.wav\";\r\nimport play from \"../sounds/ui_unlock.wav\";\r\n\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h1 = {\r\n  fontSize: '2.2rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '3.5rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '5rem',\r\n  },\r\n};\r\n\r\ntheme.typography.h4 = {\r\n  fontSize: '1.2rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '2.5rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '3rem',\r\n  },\r\n};\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  buttonStyle:{\r\n    borderRadius: 25,width:350,height:55,margin:10,fontWeight:900,color:\"white\",\r\n  },\r\n  TittleAndSubtitle:{\r\n    fontWeight:900,color:\"white\",margin:10\r\n  }\r\n}));\r\n\r\nconst TriviaGame = () => {\r\n  const classes = useStyles();\r\n  const changeModeAudio = new Audio(changeMode);\r\n  const playAudio = new Audio(play);\r\n\r\n  const [format,setFormat] = useState(0); //0 - Default form, 1- PLAY , 2- Failed , 3-  NextQuestion\r\n  let [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [questions, setQuestions] = useState();\r\n  const [loading,setLoading] = useState(false);\r\n  const [mode, setMode] = useState('easy');\r\n  const [error, setError] = useState();\r\n\r\n  const changeModeHandler = (type) => {\r\n    playSound(changeModeAudio)\r\n    setMode(type);\r\n  }\r\n\r\n  const playSound = audioFile => {\r\n    audioFile.play();\r\n  };\r\n\r\n  const getQuestion = async() => {\r\n    setLoading(true);\r\n    try{\r\n      const res = await axios.get(`https://opentdb.com/api.php?amount=5&category=15&difficulty=${mode}`);\r\n      setQuestions(res.data.results);\r\n      playSound(playAudio)\r\n      setLoading(false);\r\n      setFormat(1);\r\n    } catch(err) {\r\n      setError(err.message)\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Snackbar open={error} autoHideDuration={6000} onClose={()=>setError()} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n  <Alert onClose={()=>setError()} severity=\"error\">\r\n    {error && error}\r\n  </Alert>\r\n</Snackbar>\r\n      {format === 0 ? \r\n        <Box textAlign=\"center\" width={\"100%\"} >\r\n          <Grid item xs={12}><Typography variant=\"h1\" className={classes.TittleAndSubtitle} style={{marginBottom:30}}>TriviaTime</Typography></Grid>\r\n          <Grid item xs={12}><Typography variant=\"h4\" className={classes.TittleAndSubtitle} >Pick your level of difficulty</Typography></Grid>\r\n          <Grid item xs={12}><CustomizeButton color=\"primary\" variant=\"contained\" onClick={()=>changeModeHandler('easy')} startIcon={mode === 'easy' && <StarIcon color=\"secondary\" fontSize=\"large\"/>}>Go easy on me</CustomizeButton></Grid>\r\n          <Grid item xs={12}><CustomizeButton color=\"primary\" variant=\"contained\" onClick={()=>changeModeHandler('medium')} startIcon={mode === 'medium' && <StarIcon color=\"secondary\" fontSize=\"large\"/>} >Bring it on</CustomizeButton></Grid>\r\n          <Grid item xs={12}><CustomizeButton color=\"primary\" variant=\"contained\" onClick={()=>changeModeHandler('hard')} startIcon={mode === 'hard' && <StarIcon color=\"secondary\" fontSize=\"large\"/>}>Insanity mode</CustomizeButton></Grid>\r\n          <Grid item xs={12}><Button color=\"secondary\" variant=\"contained\" className={classes.buttonStyle} onClick={() => getQuestion()} endIcon={loading && <CircularProgress color=\"primary\" />} >Play Now</Button></Grid>\r\n        </Box>  \r\n      : format === 1 && questions ? // Play Screen\r\n          <PlayScreen classes={classes} questions={questions} currentQuestion={currentQuestion} setFormat={setFormat} setCurrentQuestion={setCurrentQuestion} setQuestions={setQuestions}/>\r\n        : format === 2 ? // Wrong Answer\r\n          <WrongAnswerScreen classes={classes} currentQuestion={currentQuestion} setCurrentQuestion={setCurrentQuestion} setFormat={setFormat} setQuestions={setQuestions}/>\r\n       : format === 3 ? // NextQuestionScreen\r\n          <NextQuestionScreen classes={classes} setCurrentQuestion={setCurrentQuestion} currentQuestion={currentQuestion} setFormat={setFormat}/>\r\n       :  null }\r\n     </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default TriviaGame;\r\n\r\n\r\n","import React from \"react\";\nimport TriviaGame from \"./view/TriviaGame\";\n\nfunction App() {\n  return (\n      <TriviaGame />\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}